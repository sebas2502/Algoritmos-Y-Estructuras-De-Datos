Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida.
La secuencia de caracteres que se recibe incluye números de tarjetas de crédito, donde cada número tiene 16 dígitos. Se desea obtener como resultado una nueva secuencia de salida con los números de tarjetas válidos.
El algoritmo para la validación de números de tarjetas de crédito es el siguiente: Para entender mejor el método usaremos un número correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares.

4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2

Por cada uno de ellos obtenemos el doble del valor que representan. Si el número resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y así sucesivamente. Si el número resultante de la suma de las multiplicaciones y de los dígitos en posición par, es múltiplo de 10, y a la vez menor o igual a 150, es un número de tarjeta válido.

Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el número es válido.


ACCION Ej-2.1.27_ES

 AMBIENTE

   sec , sal , aux : secuencia de caracteres;
   v , x , c : caracter;
   acum , i , n : entero;


    FUNCION convertirAnum (n : caracter) : entero
    
    	SEGUN (n) HACER

    		= '0' : convertir  := 0;
    		= '1' : convertir  := 1;
    		= '2' : convertir  := 2;
    		= '3' : convertir  := 3;
    		= '4' : convertir  := 4;
    		= '5' : convertir  := 5;
    		= '6' : convertir  := 6;
    		= '7' : convertir  := 7;
    		= '8' : convertir  := 8;
    		= '9' : convertir  := 9;
			otro : ESC("Error dato incorrecto...");    	

    	 FIN SEGUN

     FIN FUNCION


    FUNCION convertirAcar (m : entero) : caracter;
    
    	SEGUN (m) HACER

    		= 0 : convertir  := '0';
    		= 1 : convertir  := '1';
    		= 2 : convertir  := '2';
    		= 3 : convertir  := '3';
    		= 4 : convertir  := '4';
    		= 5 : convertir  := '5';
    		= 6 : convertir  := '6';
    		= 7 : convertir  := '7';
    		= 8 : convertir  := '8';
    		= 9 : convertir  := '9';
			otro : ESC("Error dato incorrecto...");    	

    	 FIN SEGUN

     FIN FUNCION 

    ALGORITMO

    	ARR(sec); AVZ(sec , v); CREAR(sal); acum := 0;

    																4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2
    	MIENTRAS NFDS(sec) HACER
         	
         	CREAR(aux); acum := 0;									aux : 
         															sal : 	
    		PARA (i:=1 HASTA 16) HACER

    		    n := convertirAnum(v);  

    			SI (i MOD 2 <> 0) ENTONCES

    				acum := acum + (n * 2);

    				SI (n * 2 > 9) ENTONCES

    					n := n - 9;

    					c := convertirAcar(n);

    					ESC(aux , c);

    				 FIN SI

    			 SINO

    			 	acum := acum + n;
    			 	ESC(aux , v);

    			 FIN SI

    			    

    			AVZ(sec , v); 


    		 FIN PARA

    		 CERRAR(aux);

    		SI (acum MOD 10 = 0) ^ (acum < 150) ENTONCES

    				ARR(aux); AVZ(aux , x);

    				MIENTRAS NFDS (aux) HACER

    					ESC(sal , x);
    					AVZ(aux , x);

    				 FIN MIENTRAS


    		  FIN SI


    	 FIN MIENTRAS	

    	CERRAR(sal); 

     FIN ALGORITMO




  FIN ACCION

